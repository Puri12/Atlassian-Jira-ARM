---
# NOTE: This file is generated from `bitbucket-pipelines.yml.j2` via `pipelines-generator.py`:
#
#     python3 pipelines-generator.py > bitbucket-pipelines.yml

image: atlassian/docker-release-maker:latest

definitions:
  services:
    docker:
      memory: 4096

options:
  size: 2x

pipelines:
  branches:
    ######################################################################
    # Master branch: Do full release for each image flavour
    ######################################################################
    master:
      - parallel:

        - step:
            name: Jira Software JDK 8
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='7.13'
              - export END_VERSION='9'
              - export DEFAULT_RELEASE='true'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-software,BASE_IMAGE=adoptopenjdk:8-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira-software'
              - export TAG_SUFFIXES='jdk8,ubuntu-jdk8,ubuntu'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-software'
              - python /usr/src/app/run.py --update

        - step:
            name: Jira Software JDK 11
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='8.2'
              - export END_VERSION='9'
              - export DEFAULT_RELEASE='false'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-software,BASE_IMAGE=adoptopenjdk:11-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira-software'
              - export TAG_SUFFIXES='jdk11,ubuntu-jdk11'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-software'
              - python /usr/src/app/run.py --update

        - step:
            name: Jira Service Management JDK 8
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='3.16'
              - export END_VERSION='5'
              - export DEFAULT_RELEASE='true'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-servicedesk,BASE_IMAGE=adoptopenjdk:8-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira-servicedesk'
              - export TAG_SUFFIXES='jdk8,ubuntu-jdk8,ubuntu'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-servicemanagement'
              - python /usr/src/app/run.py --update
              - export DOCKER_REPO='atlassian/jira-servicedesk'
              - python /usr/src/app/run.py --update

        - step:
            name: Jira Service Management JDK 11
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='4.2'
              - export END_VERSION='5'
              - export DEFAULT_RELEASE='false'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-servicedesk,BASE_IMAGE=adoptopenjdk:11-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira-servicedesk'
              - export TAG_SUFFIXES='jdk11,ubuntu-jdk11'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-servicemanagement'
              - python /usr/src/app/run.py --update
              - export DOCKER_REPO='atlassian/jira-servicedesk'
              - python /usr/src/app/run.py --update

        - step:
            name: Jira Core JDK 8
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='7.13'
              - export END_VERSION='9'
              - export DEFAULT_RELEASE='true'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira,BASE_IMAGE=adoptopenjdk:8-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira'
              - export TAG_SUFFIXES='jdk8,ubuntu-jdk8,ubuntu'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-core'
              - python /usr/src/app/run.py --update

        - step:
            name: Jira Core JDK 11
            services:
              - docker
            script:
              - git submodule update --init --recursive
              - export START_VERSION='8.2'
              - export END_VERSION='9'
              - export DEFAULT_RELEASE='false'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira,BASE_IMAGE=adoptopenjdk:11-hotspot'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira'
              - export TAG_SUFFIXES='jdk11,ubuntu-jdk11'
              - export CONCURRENT_BUILDS='1'
              - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
              - export DOCKER_REPO='atlassian/jira-core'
              - python /usr/src/app/run.py --update

      - step:
          name: Update README
          script:
            - apk add --no-cache git
            - git submodule update --init --recursive
            - pip install -q requests
            - export DOCKER_REPO='atlassian/jira-software'
            - python shared-components/image/push-readme.py
            - export DOCKER_REPO='atlassian/jira-servicemanagement'
            - python shared-components/image/push-readme.py
            - export DOCKER_REPO='atlassian/jira-servicedesk'
            - python shared-components/image/push-readme.py
            - export DOCKER_REPO='atlassian/jira-core'
            - python shared-components/image/push-readme.py

    ######################################################################
    # All other branches & PRs; run unit tests & functional tests
    # against latest app version
    ######################################################################
    '**':
      - step:
          name: Check if pipelines config is up-to-date...
          script:
            - python3 pipelines-generator.py > bitbucket-piplines.yml.expected && diff bitbucket-pipelines.yml bitbucket-piplines.yml.expected

      - parallel:
        - step:
            name: Run unit tests
            services:
              - docker
            script:
              - apk add --no-cache git
              - git submodule update --init --recursive
              - export PYTHONPATH=./shared-components/tests:$PYTHONPATH
              - export DOCKERFILE='Dockerfile'
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-software'
              - export DOCKERFILE_VERSION_ARG='JIRA_VERSION'
              - export MAC_PRODUCT_KEY='jira-software'
              - py.test tests/
              - py.test shared-components/tests/
              - export DOCKERFILE_BUILDARGS='ARTEFACT_NAME=atlassian-jira-software,BASE_IMAGE=adoptopenjdk:11-hotspot'
              - py.test tests/
              - py.test shared-components/tests/
        - step:
            name: Run functional tests
            services:
              - docker
            script:
              - apk add --no-cache git docker-compose jq curl
              - git submodule update --init --recursive
              - export JIRA_VERSION=`curl -s https://marketplace.atlassian.com/rest/2/products/key/jira/versions/latest | jq -r .name`
              - docker build --build-arg JIRA_VERSION=${JIRA_VERSION} -t test-image .
              - export IS_RELEASE=false
              - /usr/src/app/integration_test.sh test-image $IS_RELEASE
